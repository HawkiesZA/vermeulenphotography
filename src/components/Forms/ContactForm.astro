---
import Button from "@components/Button/Button.astro";

import { getSettings } from "@js/datastore.js"

await getSettings()
---

<form id="contact-form" class="flex h-full flex-col justify-between gap-4">
  <div id="form-message" class="hidden p-4 mb-4 rounded-md"></div>
  <input type="hidden" name="form-name" value="contact" />
  <div>
    <label for="contact-name" class="font-heading-1 text-lg uppercase">Your Name</label>
    <input type="text" class="form__input" name="name" id="contact-name" required />
  </div>
  <div class="flex flex-col gap-1">
    <label for="contact-email" class="font-heading-1 text-lg uppercase">Contact E-mail</label>
    <input
      type="email"
      class="form__input"
      name="email"
      id="contact-email"
      inputmode="email"
      required
    />
  </div>
  <div>
    <label for="contact-date" class="font-heading-1 text-lg uppercase">Event Date</label>
    <input type="date" class="form__input" name="date" id="contact-date" required />
  </div>
  <div>
    <label for="contact-message" class="font-heading-1 text-lg uppercase">Message</label>
    <textarea
      name="message"
      class="form__input"
      id="contact-message"
      rows="6"
      required></textarea>
  </div>
  <div class="flex">
    <Button variant="primary" type="submit" class="w-full px-10 md:w-fit">Submit</Button>
  </div>
</form>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement | null;
    if (!form) return;

    const messageDiv = document.getElementById('form-message');
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement | null;
    if (!submitButton) return;
    
    const originalButtonText = submitButton.textContent;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (!messageDiv || !submitButton) return;
      
      const formData = new FormData(form);
      const formValues = Object.fromEntries(formData.entries());
      
      // Reset message state
      messageDiv.textContent = '';
      messageDiv.className = 'hidden p-4 mb-4 rounded-md';
      
      try {
        submitButton.disabled = true;
        if (submitButton) submitButton.textContent = 'Sending...';
        
        const response = await fetch('/api/contact', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formValues)
        });
        
        const result = await response.json();
        
        if (result.success) {
          // Show success message
          messageDiv.textContent = result.message || 'Thank you for your message! We will get back to you soon.';
          messageDiv.className = 'bg-green-100 text-green-800 p-4 mb-4 rounded-md';
          // Reset form
          form.reset();
        } else {
          // Show error message
          messageDiv.textContent = result.error || 'There was an error sending your message. Please try again.';
          messageDiv.className = 'bg-red-100 text-red-800 p-4 mb-4 rounded-md';
        }
      } catch (error) {
        console.error('Error:', error);
        if (messageDiv) {
          messageDiv.textContent = 'There was an error sending your message. Please try again.';
          messageDiv.className = 'bg-red-100 text-red-800 p-4 mb-4 rounded-md';
        }
      } finally {
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = originalButtonText;
        }
      }
    });
  });
</script>
